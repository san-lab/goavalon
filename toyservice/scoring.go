package toyservice

var scoreTest = `{
"Type":"Credit Scoring",
"Name": "Some Name",
"DID": "Some DID",
"score": {"encrypted": true, "value": "v"},
"lock key": {"encrypted": true, "value": "v"}
}`

type Scoring struct {
	Type  string `json:"Type"`
	Name  string `json:"Name"`
	DID   string `json:"DID"`
	Score struct {
		Encrypted bool   `json:"encrypted"`
		Value     string `json:"value"`
	} `json:"score"`
	LockKey struct {
		Encrypted bool   `json:"encrypted"`
		Value     string `json:"value"`
	} `json:"lock key"`
}

var encryptRequestTest = `{"scoring": "score",
"clientpubkey":"cpk",
"issuerpubkey":"ipk"}`

type EncryptRequest struct {
	Scoring      Scoring `json:"scoring"`
	Clientpubkey string  `json:"clientpubkey"`
	Issuerpubkey string  `json:"issuerpubkey"`
}

//------------from G&P------------------

type ClaimRequestType struct {
	RequestId string `json:"request id"`
	DID       string
	Name      string
	Type      string
	Value     string
	//TODO
	IssuerName string `json:"Issuer name"`
	IssuerDID  string `json:"Issuer DID"`
	SignKey    *string `json:"signing key,omitempty"`
	Signature  *string `json:"signature,omitempty"`
}

type PlainCredentialType struct {
	Type  string `json:"Type"`
	Name  string `json:"Name"`
	DID   string `json:"DID"`
	Score struct {
		Encrypted bool   `json:"encrypted"`
		Value     string `json:"value"`
	} `json:"score"`
}

type LockKeyType struct {
	Encrypted bool   `json:"encrypted"`
	Value     string `json:"value"`
}

type CredentialWLock struct {
	Credential struct {
		Type  string `json:"Type"`
		Name  string `json:"Name"`
		DID   string `json:"DID"`
		Score struct {
			Encrypted bool   `json:"encrypted"`
			Value     string `json:"value"`
		} `json:"score"`
		LockKey LockKeyType `json:"lock key"`
	} `json:"Credential"`
	IssuerName       string           `json:"Issuer name"`
	BankPublicKey    IssuerPubKeyType `json:"Bank public key"`
	SubjecSPublicKey string           `json:"Subject's Public key"`
}

type IssuerPubKeyType struct {
	IssuerPublicKey string `json:"Issuer Public key,omitempty"`
	//IssuerPublicKeyX string `json:"Issuer Public key x,omitempty"`
	//IssuerPublicKeyY string `json:"Issuer Public key y,omitempty"`

}

type VerificationResponse struct {
	Verified bool `json:"verified"`
}

/**
type AutoGenerated struct {
	Credential struct {
		Type  string `json:"Type"`
		Name  string `json:"Name"`
		DID   string `json:"DID"`
		Score struct {
			Encrypted bool   `json:"encrypted"`
			Value     string `json:"value"`
		} `json:"score"`
		LockKey struct {
			Encrypted bool   `json:"encrypted"`
			Value     string `json:"value"`
		} `json:"lock key"`
	} `json:"Credential"`
	IssuerName      string `json:"Issuer name"`
	IssuerPublicKey struct {
		IssuerPublicKey  string `json:"Issuer Public key"`
		IssuerPublicKeyX string `json:"Issuer Public key x"`
		IssuerPublicKeyY string `json:"Issuer Public key y"`
	} `json:"Issuer public key"`
	SubjecSPublicKey string `json:"Subjec's Public key"`
}
**/

type CredentialWLockVer2 struct {
	Credential struct {
		Type  string `json:"Type"`
		Name  string `json:"Name"`
		DID   string `json:"DID"`
		Score struct {
			Encrypted bool   `json:"encrypted"`
			Value     string `json:"value"`
		} `json:"score"`
		LockKey LockKeyType `json:"lock key"`
	} `json:"Credential"`
	IssuerName       string           `json:"Issuer name"`
	IssuerDID        string           `Json:"Issuer DID'"`
	IssuerPublicKey  IssuerPubKeyType `json:"Issuer public key"`
	IssuerSignature  string           `ison:"Issuer signature"`
	SubjecSPublicKey string           `json:"Subject Public key"`
}

type CredentialWLockVer3 struct {
	Credential struct {
		Type    string      `json:"Type"`
		Name    string      `json:"Name"`
		DID     string      `json:"DID"`
		Value   string      `json:"value"`
		LockKey LockKeyType `json:"lock key"`
	} `json:"Credential"`
	IssuerName                string `json:"Issuer name"`
	IssuerDID                 string `Json:"Issuer DID'"`
	IssuerPublicKey           string `json:"Issuer public key"`
	IssuerSignature           string `ison:"Issuer signature"`
	PublicBlindingKey		  string `json: "Blinding key"`
	IssuerSignatureEncrytpted bool   `json:"signature encrypted"`
	SubjecSPublicKey          string `json:"Subject Public key"`
}

type DecryptRequest struct {
	Ciphertext string `json:"ciphertext"`
	Key        string `json:"key"`
}

type AutoGenerated struct {
	Name string `json:"name"`
	Type string `json:"type"`
	Did  string `json:"Did"`
}
